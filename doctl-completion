# vim: ft=sh 
#                       
#                                     
#        __           __  __
#   ____/ /___  _____/ /_/ /
#  / __  / __ \/ ___/ __/ / 
# / /_/ / /_/ / /__/ /_/ /  
# \__,_/\____/\___/\__/_/   
#                           
#
_doctl() {
  local cur prev opts base
  COMPREPLY=()
  cur="${COMP_WORDS[COMP_CWORD]}"
  prev="${COMP_WORDS[COMP_CWORD-1]}"

	commands="account auth compute version"
	help_lookup=$commands
	commands="$commands -t --access-token -o --output --trace -v --verbose"

  # account, whoami      Account commands.
  # action, a            Action commands.
  # domain, dns          Domain commands.
  # droplet, d           Droplet commands. Lists by default.
  # region               Region commands.
  # size                 Size commands.
  # sshkey, ssh, keys    SSH Key commands.
  # help, h              Shows a list of commands or help for one command

	case "${prev}" in
    show )
      secn="${COMP_WORDS[COMP_CWORD-2]}"
      if [ ${secn} == "action" ]; then 
        args=$(doctl action list|awk '{if (NR!=1) {print $1}}')
      elif [ ${secn} == "domain" ]; then 
        args=$(doctl domain|awk '{if (NR!=1) {print $1}}') 
      fi
      COMPREPLY=( $(compgen -W "${args}" -- "${cur}") )
      return 0
      ;;
    list|find|destroy|reboot|power_cycle|off|on|password_reset|resize)
      args=$(doctl droplet|awk '{if (NR!=1) {print $2}}')
      COMPREPLY=( $(compgen -W "${args}" -- "${cur}") )
      return 0
      ;;
    domain )
      args="show list create destroy records record add destroy-record" 
      COMPREPLY=( $(compgen -W "${args}" -- "${cur}") )
      return 0
      ;;
    account)
      args="get ratelimit" 
      COMPREPLY=( $(compgen -W "${args}" -- "${cur}") )
      return 0
      ;;
    --output|-o)
      args="json text" 
      COMPREPLY=( $(compgen -W "${args}" -- "${cur}") )
      return 0
      ;;
    droplet|d)
      args="actions backups create delete get kernels list neighbors snapshots"
      COMPREPLY=( $(compgen -W "${args}" -- "${cur}") )
      return 0
      ;;
    actions|backup|snapshots|neighbours|kernels)
      args=$(doctl compute droplet list --format ID|sed 1d)
      COMPREPLY=( $(compgen -W "${args}" -- "${cur}") )
      return 0
      ;;
    compute) 
      args="action droplet-action droplet domain floating-ip floating-ip-action image image-action plugin region size ssh-key ssh"
      COMPREPLY=( $(compgen -W "${args}" -- "${cur}") )
      return 0
      ;;
		account )
			args=$(for word in $help_lookup;do echo "$word";done)
			COMPREPLY=( $(compgen -W "${args}" -- "${cur}") )
			return 0
			;;
		help )
			args=$(for word in $help_lookup;do echo "$word";done)
			COMPREPLY=( $(compgen -W "${args}" -- "${cur}") )
			return 0
			;;
    action )
      args="list show $(doctl action list|awk '{if (NR!=1) {print $5}}')"
      COMPREPLY=( $(compgen -W "${args}" -- "${cur}") )
      return 0
      ;;
	esac
  
  COMPREPLY=($(compgen -W "${commands}" -- "${cur}"))
  return 0
}

complete -F _doctl doctl




